{"version":3,"sources":["api/PricingApi.js","api/BaseApi.js","components/ModalPopup.js","lib/GlobalConfig.js","components/SettingsDialog.js","components/AppHeader.js","components/InstanceList.js","components/MachinePriceSummary.js","components/InstancePriceList.js","lib/GeometryModel.js","components/CostModelingGeometry.js","components/GenericGeometry.js","lib/RegionList.js","components/CostModeling.js","lib/MachineConfig.js","components/PriceList.js","components/MainLayout.js","App.js","reportWebVitals.js","index.js"],"names":["PricingApi","apiKey","computeEngineSku","filter","a","this","Error","url","get","pricing","console","log","allSkus","skus","timeout","nextPageToken","i","length","push","filteredSkus","sku","category","resourceFamily","usageType","region","serviceRegions","includes","options","method","headers","fetch","response","handleResponse","data","body","JSON","stringify","res","json","status","statusText","useStyles","makeStyles","theme","modal","display","alignItems","justifyContent","outline","paper","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","ModalPopup","props","classes","content","__html","Modal","className","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","Fade","in","open","Alert","severity","AlertTitle","id","title","dangerouslySetInnerHTML","GlobalConfig","defaultConfig","locationId","localStorage","getItem","setItem","root","margin","width","avatar","blue","color","SettingsDialog","onClose","selectedValue","config","useState","reloadOnClose","setReloadOnClose","Dialog","setTimeout","window","location","reload","Typography","variant","IconButton","onClick","List","Divider","ListItem","noValidate","autoComplete","TextField","label","onChange","evt","target","value","persist","defaultValue","flexGrow","menuButton","marginRight","AppHeader","settingsOpen","setSettingsOpen","AppBar","position","Toolbar","Tooltip","Button","Fragment","InstanceList","context","price","unit","instancePriceList","map","key","resourceGroup","description","skuId","React","Component","MachinePriceSummary","state","isOpen","toggleOpen","bind","setState","totalPrice","machineDetails","type","calculatedType","desc","unitPrice","getPrice","getUnit","machinePrice","units","vcpu","memory","displayType","decimalScale","prefix","colspan","housandSeparator","Accordion","expanded","AccordionSummary","expandIcon","AccordionDetails","InstancePriceList","machineList","machine","series","GeometryModel","current","utilization","utilization_desired","recommended","replace","Math","ceil","CostModelingGeometry","styled","Paper","typography","body2","textAlign","text","secondary","spread","handleUpdateCurrent","handleUpdateUtilization","handleUpdateUtilizationDesired","handleSliderChange","model","calculateRecommendation","Number","isInteger","cleanup","saveState","setError","event","newValue","min_recommended","toFixed","max_recommended","hidden","size","Slider","valueLabelDisplay","getAriaValueText","style","float","GenericGeometry","nowrap","RegionList","_raw","regions","regionsFull","regionMap","region_id","slice","region_name","name","allRegions","machineTypes","split","Item","CostModeling","handleChangeRegion","regionList","applyRegionFilter","Grid","container","item","xs","md","Select","inputProps","MenuItem","onInputChanged","FormControlLabel","control","Checkbox","defaultChecked","instancePriceListFiltered","MachineConfig","computeServerGenerationOptions","computeServerCpuOptions","gceMachineFamilyConfig","MAX_EXTENDED_MEMORY_N","vCpu","min","max","ssd","family","instanceType","coreNumber","join","toLowerCase","instanceName","generateGceInstanceName","instanceInfo","ramRatio","Object","entries","forEach","familyInfo","genInfo","typeName","coresCount","PriceList","mc","machines","TabPanel","children","index","other","role","Box","sx","p","setTab","MainLayout","setValue","borderBottom","borderColor","Tabs","Tab","setAlert","App","machineListFiltered","vcpu_filter","memory_filter","pdboot_filter","ssdpd_filter","regionFilter","error","alert","handleErrorClose","handleInputChanged","geometry","applyMachineListFilter","vcpu_f","memory_f","curMachine","getSkus","filter_region","product","machineTypeName","at","custom","matchStandardRam","RegExp","matchStandardCpu","matchCustomRam","matchCustomCpu","match","m","getPricing","loadMachines","pricingApi","GetInstancePriceList","instancePriceListJson","message","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.433379a6.chunk.js","sourcesContent":["\nimport { array } from \"prop-types\"\nimport BaseApi from \"./BaseApi.js\"\n\nclass PricingApi extends BaseApi {\n    \n    // default api key\n    apiKey =  'AIzaSyDVWa131rNBwaTJ29-Of1YfKBHAHwyiW18'\n\n    //\n    // SKU for Compute engine is 6F81-5844-456A\n    // https://cloud.google.com/skus/?currency=USD&hl=en\n    computeEngineSku = '6F81-5844-456A'\n    \n    /**\n     * @param filter {{region:string, type:string} filter}\n     */\n    async GetInstancePriceList(filter)\n    {\n        if (!this.apiKey) {\n            throw new Error(\"Missing API Key\")\n        }\n        if (!this.computeEngineSku) {\n            throw new Error(\"Missing Compute Engine Sku\")\n        }\n\n\n        // TODO: apply filter \n        let url = `https://cloudbilling.googleapis.com/v1/services/${this.computeEngineSku}/skus/?key=${this.apiKey}`\n        let pricing = await this.get(url)\n        console.log(pricing)\n        let allSkus = pricing.skus\n        var timeout = 0\n\n        while(pricing.nextPageToken || ++timeout > 5)\n        {             \n            pricing = await this.get(`${url}&pageToken=${pricing.nextPageToken}`)\n            console.log(pricing)\n\n            for (let i=0;i<pricing.skus.length;i++) { // for loop in java script is almost fastest way to iterate\n                allSkus.push(pricing.skus[i])\n            }\n        }\n        /*  SKUs look like this:\n            {\n                \"name\": \"services/6F81-5844-456A/skus/000F-E31B-1D6F\",\n                \"skuId\": \"000F-E31B-1D6F\",\n                \"description\": \"N1 Predefined Instance Ram running in Zurich\",\n                \"category\": {\n                    \"serviceDisplayName\": \"Compute Engine\",\n                    \"resourceFamily\": \"Compute\",\n                    \"resourceGroup\": \"N1Standard\",\n                    \"usageType\": \"OnDemand\"\n                },\n                \"serviceRegions\": [\n                    \"europe-west6\"\n                ],\n                \"pricingInfo\": [\n                    {\n                        \"summary\": \"\",\n                        \"pricingExpression\": {\n                            \"usageUnit\": \"GiBy.h\",\n                            \"usageUnitDescription\": \"gibibyte hour\",\n                            \"baseUnit\": \"By.s\",\n                            \"baseUnitDescription\": \"byte second\",\n                            \"baseUnitConversionFactor\": 3865470566400,\n                            \"displayQuantity\": 1,\n                            \"tieredRates\": [\n                                {\n                                    \"startUsageAmount\": 0,\n                                    \"unitPrice\": {\n                                        \"currencyCode\": \"USD\",\n                                        \"units\": \"0\",\n                                        \"nanos\": 5928000\n                                    }\n                                }\n                            ]\n                        },\n                        \"currencyConversionRate\": 1,\n                        \"effectiveTime\": \"2021-09-10T08:56:47.271Z\"\n                    }\n                ],\n                \"serviceProviderName\": \"Google\",\n                \"geoTaxonomy\": {\n                    \"type\": \"REGIONAL\",\n                    \"regions\": [\n                        \"europe-west6\"\n                    ]\n                }\n            } */\n        // apply filter\n        \n        let filteredSkus = []\n        for (let i=0;i<allSkus.length;i++) { // for loop in java script is almost fastest way to iterate\n            let sku = allSkus[i]\n            let push = true\n            // always filter on \n            //\"category.resourceFamily\": \"Compute\",\n            //\"category.usageType\": \"OnDemand\"\n            if (sku.category.resourceFamily == \"Compute\" && sku.category.usageType == \"OnDemand\")  {\n                push=true\n            }  \n/*\n            if (sku.category.resourceGroup == \"CPU\" || \n                sku.category.resourceGroup == \"RAM\"|| \n                sku.category.resourceGroup == \"GPU\" ||\n                sku.category.resourceGroup == \"PdSnapshotEgress\" )  {\n                push=false\n            }*/\n            \n            if (filter && filter.region) {\n                if (! sku.serviceRegions.includes(filter.region)) {\n                    push=false\n                    \n                }\n            } \n            if (push) {\n                filteredSkus.push(sku)\n            }\n        }\n        console.log(`Returned ${filteredSkus.length} skus`)\n        return filteredSkus\n        \n    }\n}\n\nexport default PricingApi","class BaseApi {\n    constructor(apiKey){\n      this.apiKey = apiKey \n      \n    }\n    \n    async get (url) {    \n      console.log(\"in BaseApi.get()\")\n  \n      const options = {\n        method: \"GET\",\n        headers: { \n        }\n      }\n  \n      console.log(options)\n      const response = await fetch(url, options);\n      return this.handleResponse(response);  \n    }\n  \n    async post (url,data) {\n      const response = await fetch(url, {\n            method: \"POST\",\n            headers: { \n            },\n            body: JSON.stringify(data)\n          });\n      return this.handleResponse(response);  \n    }\n  \n    async handleResponse (response)\n    {\n      var res = \"\"\n      try {\n        res = await response.json();\n      } catch (err){\n        throw new Error(`Invalid JSON response from server. <Br>${response.status} ${response.statusText}`)\n      }    \n  \n      if (response.status !== 200) \n        throw Error(response.status)     \n      else \n        return res;\n    }\n  }\n  export default BaseApi","/*\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#            http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n*/\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport { Alert, AlertTitle } from '@material-ui/lab';\n\nconst useStyles = makeStyles((theme) => ({\n  modal: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    outline: 'none !important' // this doesn't remove the blue outline\n  },\n  paper: {\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport default function ModalPopup(props) {\n  \n  const classes = useStyles();\n  var content = {__html: props.content}\n  return (\n      <Modal\n        aria-labelledby=\"transition-modal-title\"\n        aria-describedby=\"transition-modal-description\"\n        className={classes.modal}\n        \n        {...props}\n        closeAfterTransition\n        BackdropComponent={Backdrop}\n        BackdropProps={{\n          timeout: 500,\n        }}\n      >\n        <Fade in={props.open}>\n          <Alert severity={props.severity||\"error\"}>\n            <AlertTitle>\n              <span id=\"transition-modal-title\">{props.title}</span>\n            </AlertTitle>\n            <span id=\"transition-modal-description\"> \n              <div dangerouslySetInnerHTML={content}/>\n            </span>\n          </Alert>\n        </Fade>\n      </Modal>\n  );\n}","  /*\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#            http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n*/\n\nclass GlobalConfig {\n    // This only changes per server installation!\n  defaultConfig = {\n      apiKey:  'AIzaSyDVWa131rNBwaTJ29-Of1YfKBHAHwyiW18',\n      locationId:'us-central1'\n  }\n\n  constructor(){\n     // this.apiKey = localStorage.getItem(\"apiKey\") || this.defaultConfig.apiKey\n    this.locationId = localStorage.getItem(\"locationId\") || this.defaultConfig.apiKey    \n  }\n  \n  persist() {\n    // dont store apikey locally.\n    //localStorage.setItem(\"apiKey\",this.apiKey)\n    localStorage.setItem(\"locationId\",this.locationId)\n  }\n}\nexport default GlobalConfig\n\n\n\n","\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport Dialog from '@material-ui/core/Dialog';\nimport PersonIcon from '@material-ui/icons/Person';\nimport AddIcon from '@material-ui/icons/Add';\nimport Typography from '@material-ui/core/Typography';\nimport { blue } from '@material-ui/core/colors';\nimport Divider from '@material-ui/core/Divider';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport TextField from '@material-ui/core/TextField';\nimport GlobalConfig from '../lib/GlobalConfig.js'\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nconst useStyles = makeStyles((theme) =>({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    }\n  },\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600],\n  }\n}));\n\nexport default function  SettingsDialog(props) {\n  const classes = useStyles();\n  const { onClose, selectedValue, open } = props;\n  \n  var config = new GlobalConfig();\n  const [reloadOnClose, setReloadOnClose] = useState(false);\n\n  const handleClose = () => {\n    onClose(selectedValue);   \n    if (reloadOnClose){\n      setTimeout(()=>window.location.reload(true),1);\n    }\n  };\n\n  const handleListItemClick = (value) => {\n    onClose(value);\n  };\n\n  const handleUpdateLocationId = (evt)=> {\n    if (config.locationId != evt.target.value) {\n      config.locationId = evt.target.value;\n      config.persist()\n      setReloadOnClose(true)\n    }\n  };\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n    \n    <table><tr>\n        <td width=\"100%\"><center><Typography variant=\"h6\">My Configuration</Typography>  </center>   </td>\n      <td> <IconButton aria-label=\"close\" onClick={props.onClose}>\n          <CloseIcon />\n        </IconButton>   </td>\n      </tr></table>\n\n    <List>\n     <Divider />\n        <ListItem>\n          <form className={classes.root} noValidate autoComplete=\"off\">\n            <TextField id=\"locationId\" label=\"Location\"  onChange={handleUpdateLocationId} defaultValue={config.locationId}/>\n          </form>\n        </ListItem>         \n      </List>\n    </Dialog>\n  );\n}","/*\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#            http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n*/\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\nimport SettingsOutlineIcon from '@material-ui/icons/Settings';\n\nimport SettingsDialog from './SettingsDialog.js'\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport Tooltip from '@material-ui/core/Tooltip';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function AppHeader(props) {\n  const classes = useStyles();\n  \n  const [settingsOpen, setSettingsOpen] = useState(0);\n  \n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n          GCE Cost Modeling Tool\n          </Typography>\n          <Tooltip title=\"View documentation and source code on Github\">\n            <Button onClick={()=>{window.open(\"https://github.com/byronwhitlock-google/gce-cost-calculator\")}}>            \n              <GitHubIcon color=\"inherit\"/>            \n            </Button>\n          </Tooltip>              \n            <React.Fragment>\n              <Tooltip title={`Configure Your Settings`}>\n                <Button color=\"inherit\" onClick={()=>{setSettingsOpen(1)}}>\n                  <SettingsIcon/>\n                </Button>\n              </Tooltip>\n              <SettingsDialog onClose={()=>{setSettingsOpen(0)}} open={settingsOpen}  {...props}/>          \n            </React.Fragment>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\n\n\n\n","import '@fontsource/roboto';\nimport React from 'react';\n//import Calculator from 'lib/Calculator.js' \n\n\nclass InstanceList extends React.Component {\n\n    constructor(props, context) {\n        super(props,context);\n    }  \n    formatPrice(sku) {\n        var  price  = 1000000/sku['pricingInfo'][0]['pricingExpression']['tieredRates'][0]['unitPrice']['nanos']        \n        var unit = sku['pricingInfo'][0]['pricingExpression']['usageUnitDescription']\n        return <div>${price} per {unit}</div>\n    }\n    render () {\n        return (        \n            <table key=\"mytables\">\n            <thead><tr><th>Name </th><th>Description</th></tr></thead>\n            <tbody>\n            {this.props.instancePriceList && this.props.instancePriceList.map((sku, key) =>\n                <tr key={sku.skuId}>\n                    <td>{sku.category.resourceGroup}</td><td>{sku.description}</td> \n                    <td>\n                        {//this.formatPrice(sku)\n                        }\n                    </td>\n                    <td>\n                       {JSON.stringify(sku, null, 2)}\n                    </td>\n                </tr>          \n            ) }\n            </tbody>\n        </table>\n        )\n    }\n}\n\nexport default InstanceList;\n","\nimport * as React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport TextField from '@material-ui/core/TextField'\nimport Divider from '@material-ui/core/Divider';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport JSONPretty from 'react-json-pretty';\nimport NumberFormat from 'react-number-format';\n\nclass MachinePriceSummary extends React.Component {\n    state = {isOpen:false}\n\n    constructor(props, context) {\n        super(props,context);\n        this.toggleOpen = this.toggleOpen.bind(this)\n    }  \n    \n    async toggleOpen() {        \n        this.setState({isOpen: !this.state.isOpen})        \n    }\n\n    getPrice(sku) {\n        if (!sku['pricingInfo']) return 0\n        return 1000000/sku['pricingInfo'][0]['pricingExpression']['tieredRates'][0]['unitPrice']['nanos']        \n    }\n    getUnit(sku) {\n        if (!sku['pricingInfo']) return 0\n        return sku['pricingInfo'][0]['pricingExpression']['usageUnitDescription']\n    }\n\n\n    render() {\n        var totalPrice = 0.0\n        var machineDetails = [( \n            <thead>\n                <th>SKU</th>\n                <th>Description</th>\n                <th>Unit Price</th>\n                <th></th>\n                <th>Units</th>\n                <th></th>\n                <th>Subtotal</th>\n                \n            </thead>\n        )]\n\n        for (var i in this.props.skus) {\n            var sku = this.props.skus[i]\n            \n            var id = sku['skuId'] \n            var type = sku['category']['resourceGroup']\n            var calculatedType = sku['calculatedType']\n            var desc = sku['description']\n            var unitPrice = this.getPrice(sku)\n            var unit = this.getUnit(sku)\n            var machinePrice = 0.0\n            var units = 0\n            \n            var comment\n            if (type == 'CPU' || calculatedType == 'CPU') {\n                \n                unit ='core ' + unit\n                units = this.props.vcpu\n\n            } else if(type == 'RAM' || calculatedType == 'RAM') {\n                units = this.props.memory\n            } else {\n                desc += \" !!! Not found. Not included in price!!!! \"\n            }\n\n            machinePrice += (unitPrice * units)\n            totalPrice += machinePrice\n\n            machineDetails.push (\n                <tbody>\n                    <tr>\n                        <td>{id}</td>\n                        <td>&nbsp;&nbsp;{desc}&nbsp;&nbsp;&nbsp;</td>                   \n                        <td>\n                        <NumberFormat value={unitPrice} displayType={'text'} decimalScale='4' prefix={'$'} /> per {unit}\n                        </td>\n                        <td>*</td>\n                        <td>{units} {calculatedType}</td>\n                        <td> = </td>\n                        <td>\n                            <NumberFormat value={machinePrice} displayType={'text'} decimalScale='2' prefix={'$'} /> \n                        </td>\n                    </tr> \n                </tbody>\n            )\n        }\n\n        machineDetails.push (\n            <tbody>\n                <tr><td colspan='100'><hr/></td></tr>\n                <tr>\n                    <th colspan='6'>Total:</th>\n                    <td><NumberFormat value={totalPrice} displayType={'text'} decimalScale='2' housandSeparator={true} prefix={'$'} /> per hour</td>\n                </tr> \n            </tbody>\n        )\n        \n        if (totalPrice == 0) \n            return ( <Typography  color=\"secondary\"> This instance type is not available in this region.</Typography>)\n        else\n            return (\n                <Accordion expanded={this.state.isOpen} onChange={this.toggleOpen}>\n                    <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\">\n                    <NumberFormat value={totalPrice} displayType={'text'} decimalScale='2' housandSeparator={true} prefix={'$'} />&nbsp;per hour\n                    </AccordionSummary>\n                    <AccordionDetails>\n                        <table>{machineDetails}</table>\n                    </AccordionDetails>\n                </Accordion>\n            )\n    }\n    \n}\nexport default MachinePriceSummary;\n","import '@fontsource/roboto';\nimport React from 'react';\nimport JSONPretty from 'react-json-pretty';\nimport MachinePriceSummary from './MachinePriceSummary.js'\n\nclass InstancePriceList extends React.Component {\n\n    constructor(props, context) {\n        super(props,context);\n    }  \n    render () {\n        return (        \n            <table width='100%' key=\"mytables\">\n            <thead>\n                    <tr>\n                        <th>Instance</th>\n                        <th>Series</th>\n                        <th>CPU</th>\n                        <th>Memory</th>\n                        <th>Price</th>\n                    </tr>\n            </thead>\n            <tbody>\n            {this.props.machineList && this.props.machineList.map((machine,key) =>\n                <tr key={key}>\n                    <td>{machine.type}</td>\n                    <td>{machine.series}</td>\n                    <td>{machine.vcpu}</td> \n                    <td>{machine.memory}</td>\n                    <td>\n                        <MachinePriceSummary {...machine}/>\n                     </td>      \n                </tr>          \n            ) }\n            </tbody>\n        </table>\n        )\n    }\n}\n\nexport default InstancePriceList;\n","/*\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#            http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n*/\nclass GeometryModel\n{  \n    title= \"\"\n    type= \"\"\n    current=\"0\"\n    utilization=100\n    utilization_desired=100\n    recommended=0\n    isOpen=false\n    \n    // id is not set incase we try to persist \n    constructor(title,type) {     \n      // we have to have a title or we cant persist or load.\n      if ( title ){\n\n        this.title= title\n        this.type= type\n        \n        this.id = title.replace( /[^a-z0-9]/g, '' ); // lowercase a-z only\n        \n        let current = localStorage.getItem(`${this.id}-current`)\n        this.current = current ? current : this.current\n\n        let utilization = localStorage.getItem(`${this.id}-utilization`)\n        this.utilization = utilization ? utilization : this.utilization\n\n        let utilization_desired = localStorage.getItem(`${this.id}-utilization_desired`)\n        this.utilization_desired = utilization_desired ? utilization_desired : this.utilization_desired\n\n        this.isOpen = localStorage.getItem(`${this.id}-isOpen`)\n\n        if (this.isOpen == 'false') // local storage is always a string\n          this.isOpen = false\n      }\n    }\n\n    \n    calculateRecommendation() {\n        if (this.utilization_desired) // prevent divide by zero\n        {\n          // now calculate recommended.\n          \n              return this.recommended =  Math.ceil(this.current*this.utilization/this.utilization_desired)\n            \n        }        \n    }\n\n    //store shape to localstorge\n    persist() {\n\n      // don't store NaN or null or\n      if (this.current) {\n        localStorage.setItem(`${this.id}-current`,this.current)\n      }\n\n      if (this.utilization) {\n        localStorage.setItem(`${this.id}-utilization`,this.utilization)\n      }\n\n      if (this.utilization_desired) {\n        localStorage.setItem(`${this.id}-utilization_desired`,this.utilization_desired)\n      }\n\n      localStorage.setItem(`${this.id}-isOpen`,this.isOpen)\n    }\n    \n}\n\nexport default GeometryModel","import * as React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport TextField from '@material-ui/core/TextField'\nimport Divider from '@material-ui/core/Divider';\nimport ArrowRightAltRoundedIcon from '@material-ui/icons/ArrowRightAltRounded';\nimport Grid from '@material-ui/core/Grid';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport GeometryModel from '../lib/GeometryModel';\nimport Slider from '@material-ui/core/Slider'\nimport { Box } from '@material-ui/core';\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\n\n\nimport Paper from '@material-ui/core/Paper';\nimport { styled } from '@material-ui/core/styles';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'left',\n  color: theme.palette.text.secondary,\n}));\n\nclass CostModelingGeometry extends React.Component {\n    constructor(props, context) {\n        super(props,context);\n        this.handleUpdateCurrent = this.handleUpdateCurrent.bind(this)\n        this.handleUpdateUtilization = this.handleUpdateUtilization.bind(this)\n        this.handleUpdateUtilizationDesired = this.handleUpdateUtilizationDesired.bind(this)\n        this.toggleOpen = this.toggleOpen.bind(this)\n        this.handleSliderChange = this.handleSliderChange.bind(this)\n        \n    }  \n\n\n    state = { \n            isOpen:0,\n            current: '',\n            utilization: 0,\n            utilization_desired: 0,\n            recommended:0,\n            spread:20\n        }\n    \n\n    async componentDidMount(){\n\n        // load model data from localStorage\n        let model = new GeometryModel(this.props.title, this.props.type)\n        await model.calculateRecommendation()\n        \n        this.props.onChange(model)\n        \n        //set default state from localStorage\n        this.setState({\n            isOpen: model.isOpen,\n            current: model.current,\n            utilization: model.utilization,\n            utilization_desired: model.utilization_desired ,\n            recommended: model.recommended\n        })\n    }\n\n    cleanup (text) {\n        if (!Number.isInteger(text)) {\n            return text.replace( /[^0-9]/g, '' ); \n        } else {\n            return text\n        }\n    }\n    async saveState() {\n        let model = new GeometryModel(this.props.title, this.props.type)\n        model.isOpen= this.state.isOpen\n\n        if (this.state.current) {\n            model.current= this.cleanup(this.state.current)\n        }\n        if (this.state.utilization) {\n            model.utilization= this.cleanup(this.state.utilization)\n        }\n        if (this.state.utilization_desired) {\n            model.utilization_desired= this.cleanup(this.state.utilization_desired)\n        }\n\n        await model.calculateRecommendation()\n        if (model.recommended) {\n            // update recommended calculation\n            this.setState({...this.state,recommended: model.recommended})\n            \n            this.props.onChange(model)\n        }\n\n        await model.persist()\n        \n\n    }\n\n    async toggleOpen() {        \n        await this.setState({...this.state, isOpen: !this.state.isOpen})\n        this.saveState()\n    }\n    \n    async handleUpdateCurrent(evt) {\n        let current = evt.target.value.replace( /[^0-9]/g, '' ); \n        if (current) {\n            await this.setState({...this.state,current: current})\n            this.saveState()\n        }\n    }\n    async handleUpdateUtilization(evt) {\n        let utilization = evt.target.value.replace( /[^0-9]/g, '' ); \n        if (utilization > 100) {\n            this.props.setError(\"Utilization cannot exceed 100%\")\n        } else if (utilization) {\n            await this.setState({...this.state,utilization: utilization})\n            this.saveState()\n        }\n    }\n    async handleUpdateUtilizationDesired(evt) {\n        let utilization_desired = evt.target.value.replace( /[^0-9]/g, '' ); \n        if (utilization_desired > 100) {\n            this.props.setError(\"Desired Utilization cannot be exceed  100%\")\n        } else if (utilization_desired) {\n            await this.setState({...this.state,utilization_desired: utilization_desired})\n            this.saveState()     \n        }\n    }\n\n    handleSliderChange(event, newValue){\n        this.setState({spread: newValue});\n    }\n    \n    render () {\n        let title = this.props.title\n        let type = this.props.type\n        console.log(\"rendering\")\n\n        var min_recommended = (this.state.recommended - (this.state.recommended * this.state.spread/100)).toFixed(0)\n        var max_recommended = (this.state.recommended + (this.state.recommended * this.state.spread/100)).toFixed(0)\nconsole.log(this.state)\n        return (\n                <Accordion expanded={this.state.isOpen} onChange={this.toggleOpen}>\n                    <AccordionSummary\n                    expandIcon={<ExpandMoreIcon />}\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\">\n                        <Typography variant=\"h6\">{title}&nbsp;&nbsp;</Typography> \n                        \n                        <Typography  hidden={this.state.isOpen} color=\"primary\">{this.state.recommended}  {type} </Typography>\n                    </AccordionSummary>\n                    <AccordionDetails>\n                        <table width=\"100%\">\n                            <tr>\n                                <td>\n           \n\n                                    <Accordion>\n                                        <AccordionSummary\n                                        expandIcon={<ExpandMoreIcon />}\n                                        aria-controls=\"panel1a-content\"\n                                        id=\"panel1a-header\"\n                                        >\n                                       <b>\n                                            <Tooltip title={`Current ${title}`}>\n                                                <Typography>\n                                                <TextField  \n                                                    label={`${title}`} \n                                                    value={`${this.state.current}`}\n                                                    onChange={this.handleUpdateCurrent}\n                                                    size=\"small\"/> \n                                                </Typography>                                                                \n                                            </Tooltip>  {type} </b> @ {this.state.utilization_desired}% Utilization\n                                        </AccordionSummary>\n\n                                        <AccordionDetails> \n                                            <h6>Utilization</h6>                                               \n                                            <Tooltip title={`Curr Util`} >\n                                                <Typography>\n                                                    <TextField  \n                                                        label={`Current`} \n                                                        value={`${this.state.utilization} %`}\n                                                        onChange={this.handleUpdateUtilization}\n                                                        size=\"small\"/>\n                                                </Typography>      \n                                            </Tooltip>                   \n                                            <Tooltip title={`Desired`} >\n                                                <Typography>\n                                                    <TextField  \n                                                        label={`Desired`} \n                                                        value={`${this.state.utilization_desired} %`}\n                                                        onChange={this.handleUpdateUtilizationDesired}\n                                                        size=\"small\"/>\n                                                </Typography>    \n                                            </Tooltip>\n                                        </AccordionDetails>\n                                    </Accordion>           \n                                </td>\n                                <td>&nbsp;&nbsp;&nbsp;{/*i got hacks from the 90s table layout till i die*/}</td>\n                                <td>\n                                    <Accordion>\n                                        <AccordionSummary\n                                        expandIcon={<ExpandMoreIcon />}\n                                        aria-controls=\"panel1a-content\"\n                                        id=\"panel1a-header\"\n                                        >\n                                            <Typography  color=\"primary\" variant=\"h5\">\n                                                <center>\n                                                    <b>{min_recommended} to {max_recommended}  {type}</b> \n                                                </center>\n                                            </Typography>  \n                                        </AccordionSummary>\n                                        <AccordionDetails>\n                                            <table><tr><td>\n                                            <Slider\n                                                    aria-label={`${type} Spread`}\n                                                    valueLabelDisplay=\"auto\"\n                                                    defaultValue={20}\n                                                    getAriaValueText={(value) => {return `${value}%`}}\n                                                    onChange={this.handleSliderChange}\n                                                    size=\"small\"\n                                                    aria-label=\"Small\"                                                    \n                                                    min={0}\n                                                    max={100}\n                                                /> \n                                            </td></tr><tr><td>\n                                            {`Increasing ${type} spread (min/max) will match more machine types in right panel`}\n                                            <span style={{float:'right'}}><ArrowRightAltIcon/></span>\n                                            </td></tr>\n                                            </table>\n                                        </AccordionDetails>\n                                    </Accordion>        \n                                    \n\n                                </td>\n                            </tr>\n                        </table>\n                        \n                    </AccordionDetails>\n                    \n                </Accordion>        \n                        \n            );\n        }\n}\nexport default CostModelingGeometry","import * as React from 'react';\n\nimport Typography from '@material-ui/core/Typography';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport Divider from '@material-ui/core/Divider';\nimport ArrowRightAltRoundedIcon from '@material-ui/icons/ArrowRightAltRounded';\nimport TextField from '@material-ui/core/TextField'\n\nexport default function GenericGeometry(props) {\n  return (\n        <Accordion>\n            <AccordionSummary\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel1a-content\"\n            id=\"panel1a-header\"\n            >\n            <Typography variant=\"h6\">{props.title}&nbsp;&nbsp;</Typography> \n        <Typography  color=\"primary\">   {props.value} {props.type}</Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n                <table><tr><td nowrap=\"true\">\n            <Typography>\n                    {props.title}: {props.current} <br/>                    \n            </Typography>\n            </td><td>                  \n                <Typography>\n                <TextField  \n                    label={`Current ${props.title}`} \n                    value={props.value}\n                    size=\"small\"/> {props.type}\n                </Typography>       \n            </td></tr></table>\n            </AccordionDetails>\n        </Accordion>                \n  );\n}","  /*\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#            http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n*/\n\nclass RegionList {\n\n    regions() {\n        let regions = this.regionsFull()\n        let regionMap = []\n        \n        for(var i =0;i<regions.length;i++){\n            \n            let region_id = regions[i].id.slice(0,-2)\n            let region_name = regions[i].name\n\n            regionMap[region_id]={id: region_id, name:region_name}\n        }\n        let allRegions = []\n        for (var id in regionMap){\n            allRegions.push(regionMap[id])\n        }\n        return allRegions /// i hate js ^^^\n    }\n    regionsFull(){\n        var regions = []\n        for(var i=0;i<this._raw.length;i++) {\n            \n            var region = this._raw[i][0];\n            var name = this._raw[i][1];\n            var machineTypes = this._raw[i][2];\n                      \n\n            regions.push({\n                id: region,\n                name: name,\n                machineTypes: machineTypes ? machineTypes.length ? machineTypes.split(',') : [] : [] // don't get confused sweetie ;-* \n            })\n        }\n        return regions;\n    }\n    //copy paste from https://cloud.google.com/compute/docs/regions-zones#available\n    // TODO:  these need to be pulled dynamically!!!!\n    _raw = \n    [\n        ['asia-east1-a', 'Changhua County, Taiwan, APAC', 'E2, N2, N2D, N1, M1, C2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake, AMD EPYC Rome', 'GPUs'],\n        ['asia-east1-b', 'Changhua County, Taiwan, APAC', 'E2, N2, N2D, N1, M1, C2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake, AMD EPYC Rome', 'GPUs'],\n['asia-east1-c', 'Changhua County, Taiwan, APAC', 'E2, N2, N2D, N1, M1, C2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake, AMD EPYC Rome', 'GPUs'],\n['asia-east2-a', 'Hong Kong, APAC', 'E2, N2, N2D, N1, C2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake, AMD EPYC Rome'],\n['asia-east2-b', 'Hong Kong, APAC', 'E2, N2, N2D, N1, C2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake, AMD EPYC Rome'],\n['asia-east2-c', 'Hong Kong, APAC', 'E2, N2, N2D, N1, C2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake, AMD EPYC Rome'],\n['asia-northeast1-a', 'Tokyo, Japan, APAC', 'E2, N2, N2D, N1, M1, M2, C2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake, AMD EPYC Rome', 'GPUs'],\n['asia-northeast1-b', 'Tokyo, Japan, APAC', 'E2, N2, N2D, N1, M1, M2, C2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake, AMD EPYC Rome'],\n['asia-northeast1-c', 'Tokyo, Japan, APAC', 'E2, N2, N2D, N1, M1, C2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake, AMD EPYC Rome', 'GPUs'],\n['asia-northeast2-a', 'Osaka, Japan, APAC', 'E2, N1, N2, N2D, M1, C2', 'Ivy Bridge, Sandy Bridge, Broadwell, Skylake, , Cascade Lake, AMD EPYC Rome'],\n['asia-northeast2-b', 'Osaka, Japan, APAC', 'E2, N1, N2, N2D, M1, M2', 'Ivy Bridge, Sandy Bridge, Broadwell, Skylake, Cascade Lake, AMD EPYC Rome'],\n['asia-northeast2-c', 'Osaka, Japan, APAC', 'E2, N2, N2D, N1, M2', 'Ivy Bridge, Sandy Bridge, Broadwell, Skylake, Cascade Lake, AMD EPYC Rome'],\n['asia-northeast3-a', 'Seoul, South Korea, APAC', 'E2, N2, N1, C2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake'],\n['asia-northeast3-b', 'Seoul, South Korea, APAC', 'E2, N2, N1, C2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake', 'GPUs'],\n['asia-northeast3-c', 'Seoul, South Korea, APAC', 'E2, N2, N1, C2', 'Ivy Bridge, Sandy Bridge, Broadwell, Skylake, Cascade Lake', 'GPUs'],\n['asia-south1-a', 'Mumbai, India APAC', 'E2, N2, N1, M2, M1, C2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake', 'GPUs'],\n['asia-south1-b', 'Mumbai, India APAC', 'E2, N2, N1, M2, M1', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake', 'GPUs'],\n['asia-south1-c', 'Mumbai, India APAC', 'E2, N1, M1', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake'],\n['asia-south2-a'],\n['asia-south2-b'],\n['asia-south2-c', 'Delhi, India APAC', 'E2, N1, N2, C2', 'Haswell, Broadwell, Skylake, Cascade Lake'],\n['asia-southeast1-a'],\n['asia-southeast1-b', 'Jurong West, Singapore, APAC', 'E2, N2, N2D, N1, M1, C2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake, AMD EPYC Rome', 'GPUs'],\n['asia-southeast1-c', 'Jurong West, Singapore, APAC', 'E2, N2, N2D, N1, M1, C2, A2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake, AMD EPYC Rome', 'GPUs'],\n['asia-southeast2-a', 'Jakarta, Indonesia, APAC', 'E2, N2, N1, M1', 'Ivy Bridge, Haswell, Broadwell, Skylake, Cascade Lake', 'GPUs'],\n['asia-southeast2-b', 'Jakarta, Indonesia, APAC', 'E2, N2, N1', 'Ivy Bridge, Haswell, Broadwell, Skylake, Cascade Lake', 'GPUs'],\n['asia-southeast2-c', 'Jakarta, Indonesia, APAC', 'E2, N2, N1, M1', 'Ivy Bridge, Haswell, Broadwell, Skylake, Cascade Lake', 'GPUs'],\n['australia-southeast1-a', 'Sydney, Australia, APAC', 'E2, N2, N1, C2, M1, M2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake'],\n['australia-southeast1-b', 'Sydney, Australia, APAC', 'E2, N2, N1, C2, M1, M2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake', 'GPUs'],\n['australia-southeast1-c', 'Sydney, Australia, APAC', 'E2, N2, N1, C2, M1, M2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake', 'GPUs'],\n['australia-southeast2-a', 'Melbourne, Australia, APAC', 'E2, N1, N2', 'Haswell, Broadwell, Skylake, Cascade Lake'],\n['australia-southeast2-b'],\n['australia-southeast2-c', 'Melbourne, Australia, APAC', 'E2, N1, N2, M1', 'Haswell, Broadwell, Skylake, Cascade Lake'],\n['europe-central2-a'],\n['europe-central2-b'],\n['europe-central2-c', 'Warsaw, Poland, Europe', 'E2, N2, N1', 'Haswell, Broadwell, Skylake, Cascade Lake'],\n['europe-north1-a', 'Hamina, Finland, Europe', 'E2, N2, N2D, N1, C2', 'Ivy Bridge, Sandy Bridge, Broadwell, Skylake, Cascade Lake, AMD EPYC Rome'],\n['europe-north1-b', 'Hamina, Finland, Europe', 'E2, N2, N2D, N1, C2', 'Ivy Bridge, Sandy Bridge, Broadwell, Skylake, Cascade Lake, AMD EPYC Rome'],\n['europe-north1-c', 'Hamina, Finland, Europe', 'E2, N2, N2D, N1, C2', 'Ivy Bridge, Sandy Bridge, Broadwell, Skylake, Cascade Lake, AMD EPYC Rome'],\n['europe-west1-b', 'St. Ghislain, Belgium, Europe', 'E2, N2, N2D, N1, M1, M2, C2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake, AMD EPYC Rome', 'GPUs'],\n['europe-west1-c', 'St. Ghislain, Belgium, Europe', 'E2, N2, N2D, N1, M2, C2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake, AMD EPYC Rome', 'GPUs'],\n['europe-west1-d', 'St. Ghislain, Belgium, Europe', 'E2, N2, N2D, N1, M1, C2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake, AMD EPYC Rome,', 'GPUs'],\n['europe-west2-a', 'London, England, Europe', 'E2, N2, N2D, N1, C2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake, AMD EPYC Rome', 'GPUs'],\n['europe-west2-b', 'London, England, Europe', 'E2, N2, N2D, N1, M1, M2, C2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake, AMD EPYC Rome', 'GPUs'],\n['europe-west2-c', 'London, England, Europe', 'E2, N2, N2D, N1, M1, M2, C2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake, AMD EPYC Rome'],\n['europe-west3-a', 'Frankfurt, Germany Europe', 'E2, N2, N2D, N1, M1, M2, C2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake, AMD EPYC Rome'],\n['europe-west3-b', 'Frankfurt, Germany Europe', 'E2, N2, N2D, N1, M1, M2, C2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake, AMD EPYC Rome', 'GPUs'],\n['europe-west3-c', 'Frankfurt, Germany Europe', 'E2, N2, N2D, N1, M1, C2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake, AMD EPYC Rome'],\n['europe-west4-a', 'Eemshaven, Netherlands, Europe', 'E2, N2, N2D, N1, C2, A2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake, AMD EPYC Rome', 'GPUs'],\n['europe-west4-b', 'Eemshaven, Netherlands, Europe', 'E2, N2, N2D, N1, M2, M1, C2, A2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake, AMD EPYC Rome', 'GPUs'],\n['europe-west4-c', 'Eemshaven, Netherlands, Europe', 'E2, N2, N2D, N1, M2, M1, C2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake, AMD EPYC Rome', 'GPUs'],\n['europe-west6-a'],\n['europe-west6-b'],\n['europe-west6-c', 'Zurich, Switzerland, Europe', 'E2, N2, N1, C2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake'],\n['northamerica-northeast1-a', 'Montréal, Québec, North America', 'E2, N2, N2D, N1, C2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake, AMD EPYC Rome', 'GPUs'],\n['northamerica-northeast1-b', 'Montréal, Québec, North America', 'E2, N2, N2D, N1, M1, M2, C2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake, AMD EPYC Rome', 'GPUs'],\n['northamerica-northeast1-c', 'Montréal, Québec, North America', 'E2, N2, N2D, N1, M1, M2, C2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake, AMD EPYC Rome', 'GPUs'],\n['northamerica-northeast2-a', 'Toronto, Ontario, North America', 'E2, N2, N1', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake'],\n['northamerica-northeast2-b', 'Toronto, Ontario, North America', 'E2, N2, N1', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake'],\n['northamerica-northeast2-c', 'Toronto, Ontario, North America', 'E2, N2, N1', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake'],\n['southamerica-east1-a', 'Osasco, São Paulo, Brazil, South America', 'E2, N2, N1, C2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake'],\n['southamerica-east1-b', 'Osasco, São Paulo, Brazil, South America', 'E2, N2, N1, M1, C2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake'],\n['southamerica-east1-c', 'Osasco, São Paulo, Brazil, South America', 'E2, N2, N1, M1, C2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake', 'GPUs'],\n['us-central1-a', 'Council Bluffs, Iowa, North America', 'E2, N2, N2D, N1, M1, C2, A2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake, AMD EPYC Rome', 'GPUs'],\n['us-central1-b', 'Council Bluffs, Iowa, North America', 'E2, N2, N2D, N1, M2, M1, C2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake, AMD EPYC Rome', 'GPUs'],\n['us-central1-c', 'Council Bluffs, Iowa, North America', 'E2, N2, N2D, N1, M2, M1, C2, A2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake, AMD EPYC Rome', 'GPUs'],\n['us-central1-f', 'Council Bluffs, Iowa, North America', 'E2, N2, N2D, N1, C2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake, AMD EPYC Rome', 'GPUs'],\n['us-east1-b', 'Moncks Corner, South Carolina, North America', 'E2, N2, N2D, N1, M1, C2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake, AMD EPYC Rome', 'GPUs'],\n['us-east1-c', 'Moncks Corner, South Carolina, North America', 'E2, N2, N2D, N1, M1, C2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake, AMD EPYC Rome', 'GPUs'],\n['us-east1-d', 'Moncks Corner, South Carolina, North America', 'E2, N2, N2D, N1, M1, C2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake, AMD EPYC Rome', 'GPUs'],\n['us-east4-a', 'Ashburn, Virginia, North America', 'E2, N2, N2D, N1, M2, M1, C2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake, AMD EPYC Rome', 'GPUs'],\n['us-east4-b', 'Ashburn, Virginia, North America', 'E2, N2, N2D, N1, M2, M1, C2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake, AMD EPYC Rome', 'GPUs'],\n['us-east4-c', 'Ashburn, Virginia, North America', 'E2, N2, N2D, N1, M1, C2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake, AMD EPYC Rome', 'GPUs'],\n['us-west1-a', 'The Dalles, Oregon, North America', 'E2, N2, N2D, N1, M1, C2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake, AMD EPYC Rome', 'GPUs'],\n['us-west1-b', 'The Dalles, Oregon, North America', 'E2, N2, N2D, N1, M1, C2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake, AMD EPYC Rome', 'GPUs'],\n['us-west1-c', 'The Dalles, Oregon, North America', 'E2, N2, N2D, N1, C2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake, AMD EPYC Rome'],\n['us-west2-a', 'Los Angeles, California, North America', 'E2, N1, M2, C2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake'],\n['us-west2-b', 'Los Angeles, California, North America', 'E2, N1, C2, M1', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake', 'GPUs'],\n['us-west2-c', 'Los Angeles, California, North America', 'E2, N1, M2, M1, C2', 'Ivy Bridge, Sandy Bridge, Haswell, Broadwell, Skylake, Cascade Lake', 'GPUs'],\n['us-west3-a'],\n['us-west3-b'],\n['us-west3-c', 'Salt Lake City, Utah, North America', 'E2, N1, C2', 'Ivy Bridge, Sandy Bridge, Broadwell, Skylake, Cascade Lake'],\n['us-west4-a', 'Las Vegas, Nevada, North America', 'E2, N2, N2D, N1, M2, M1', 'Ivy Bridge, Broadwell, Skylake, Cascade Lake, AMD EPYC Rome', 'GPUs'],\n['us-west4-b', 'Las Vegas, Nevada, North America', 'E2, N2, N2D, N1, M1', 'Ivy Bridge, Broadwell, Skylake, Cascade Lake, AMD EPYC Rome', 'GPUs'],\n['us-west4-c', 'Las Vegas, Nevada, North America', 'E2, N2, N1', 'Ivy Bridge, Broadwell, Skylake, Cascade Lake']\n    ]\n\n}\nexport default RegionList","/*\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#            http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n*/\nimport React, { useState } from 'react';\nimport DOMPurify from \"dompurify\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { styled } from '@material-ui/core/styles';\nimport CardActions from '@material-ui/core/CardActions'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\n\nimport Button from '@material-ui/core/Button';\nimport InstancePriceList from './InstancePriceList.js' \nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CostModelingGeometry from './CostModelingGeometry.js'\nimport GenericGeometry from './GenericGeometry.js'\nimport Divider from '@material-ui/core/Divider';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { Checkbox } from '@material-ui/core';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport GeometryModel from '../lib/GeometryModel.js';\nimport Select from '@material-ui/core/Select'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport RegionList from '../lib/RegionList.js'\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'left',\n  color: theme.palette.text.secondary,\n}));\n\nclass CostModeling extends React.Component {\n\n    constructor(props, context) {\n        super(props,context);\n        this.handleChangeRegion= this.handleChangeRegion.bind(this)\n        this.regionList= new RegionList()\n    }  \n\n    state = {filter: {region:'us-west2'}}\n\n    regions =[]\n\n    async handleChangeRegion(evt) {\n        await this.setState({filter: {region: evt.target.value}})\n        this.props.applyRegionFilter(this.state.filter.region)\n    }    \n    \n    async componentDidMount() { \n        \n        this.regions = this.regionList.regions() \n        this.props.applyRegionFilter(this.state.filter.region)\n    }\n\n    \n\n\n    render () {\n        let props = this.props\n        \n        return (\n            <Grid container spacing={2}>\n            <Grid item xs={12} md={4}>\n                <Item>\n                    <h2>Region:&nbsp;                \n                            <Select\n                                value={this.state.filter.region}\n                                onChange={this.handleChangeRegion}\n                                inputProps={{\n                                name: 'Region',\n                                id: 'region',\n                                }}\n                            >\n                                {this.regions.map((region, key) =>\n                                <MenuItem value={region.id}>{region.name} ({region.id})</MenuItem>       \n                                ) }\n                            </Select>                    \n                     </h2>\n\n                    <Tooltip title=\"Instance Geometry parameters determined by current count, utilization and desired utilization of the resource.\">\n                        <h2>Machine Geometry Recommender</h2>\n                    </Tooltip>\n                    \n                    \n                    <CostModelingGeometry title=\"vCpu\" type =\"Cores\"  onChange={this.props.onInputChanged} {...this.props}/>       \n                    <CostModelingGeometry title=\"Memory\" type =\"Gigabytes\" onChange={this.props.onInputChanged} {...this.props}/>       \n                    <CostModelingGeometry title=\"PD-Boot\" type =\"Disk GB\" onChange={this.props.onInputChanged} {...this.props}/>       \n                    <CostModelingGeometry title=\"SSD-PD\" type =\"Disk GB\" onChange={this.props.onInputChanged} {...this.props}/>       \n                \n                </Item>\n                <Item>\n                <h2>Include Contractual Discount</h2>\n                    <GenericGeometry \n                        title=\"Discount\" \n                        value=\"5\"\n                        type=\"%\"\n                        {...this.props}\n\n                    />\n                </Item>\n                \n                <Item>\n                <h2><FormControlLabel control={<Checkbox defaultChecked color=\"primary\"/>} label=\"\" />Show Commited Use Discounts ?</h2>\n                                    <GenericGeometry \n                        title=\"Sustained Use Discount\" \n                        value=\"6\"\n                        type=\"Months\"\n                        {...this.props}\n                    />\n                    <GenericGeometry \n                        title=\"On-Demand Period\" \n                        value=\"6\"\n                        type=\"Months\"\n                        {...this.props}\n                    />\n                    <GenericGeometry \n                        title=\"CUD Period\" \n                        value=\"3 Years\"\n                        type=\"Years\"\n                        {...this.props}\n                    />\n                    <GenericGeometry \n                        title=\"Term\" \n                        value=\"48\"\n                        type=\"Months\"\n                        {...this.props}\n                    />                                \n                </Item>\n            </Grid>\n            <Grid item xs={12} md={8}>\n                <Item>\n\n                <h2>Matching Machine Types</h2>\n                <InstancePriceList {...props}\n                    filter={this.state.filter}\n                    instancePriceList={this.state.instancePriceListFiltered}                    \n                />\n                </Item>\n            </Grid>      \n            </Grid>\n\n            );\n    }\n} \nexport default CostModeling","class MachineConfig {\n\n    /**\n     * Combines instance name.\n     * @param {string} family instance family.\n     * @param {number} series instance series.\n     * @param {string} instanceType type of this instance.\n     * @param {number} coreNumber number of cores.\n     * @return {string} instance name.\n     * @export\n     */\n    generateGceInstanceName(family, series, instanceType, coreNumber) {\n    let cores = series == 'a2' ? `${coreNumber}g` : coreNumber;\n    return [series, instanceType, cores].join('-').toLowerCase();\n    }\n\n    machineDetails (family, series, instanceType, coreNumber) {\n        const instanceName =  this.generateGceInstanceName(family, series, instanceType, coreNumber);\n        const instanceInfo =  this.gceMachineFamilyConfig[family][series]['supportedTypes'][instanceType];\n        const ramRatio = instanceInfo['alternateRamRatio'] &&\n        instanceInfo['alternateRamRatioCores'] &&\n        instanceInfo['alternateRamRatioCores'].includes(coreNumber) ?\n        instanceInfo['alternateRamRatio'] :\n        instanceInfo['ramRatio'];\n        const coreRatio = instanceInfo['coreRatio'];\n        \n        let vcpu = coreNumber * coreRatio\n        let memory = coreNumber * ramRatio\n        let gpu = 0\n\n        if (series == 'a2') {        \n            gpu = coreNumber\n        }\n        return {\n            type: instanceName,\n            series:series,\n            family:family,\n            vcpu:vcpu,\n            memory:memory};\n    }\n  \n\n    // gets us the machinelist format.\n    machines() {\n        let machineList = []\n        Object.entries(this.gceMachineFamilyConfig).forEach(([\n                                                                family, familyInfo\n                                                            ]) => {\n            \n            Object.entries(familyInfo).forEach(([series, genInfo]) => {\n            Object.entries(genInfo['supportedTypes']).forEach(([\n                                                                typeName, typeData\n                                                                ]) => {\n                typeData['supportedCores'].forEach((coresCount) => {\n\n                    machineList.push(\n                        this.machineDetails(family, series, typeName, coresCount)\n                    )\n                });\n            });\n            });\n        });\n        return machineList\n    }\n\n  /**\n   * @export {!Object.<string,!Array.<!Object.<string, number>>>}\n   */\n\n  computeServerGenerationOptions = {\n    'gp': [\n      {name: 'N1', value: 'n1'}, {name: 'N2', value: 'n2'},\n      {name: 'E2', value: 'e2'}, {name: 'N2D', value: 'n2d'},\n      {name: 'T2D', value: 't2d'}\n    ],\n    'compute': [{name: 'C2', value: 'c2'}],\n    'memory': [{name: 'M1', value: 'm1'}, {name: 'M2', value: 'm2'}],\n    'accelerator': [{name: 'A2', value: 'a2'}]\n  };\n\n  /**\n   * @export {!Array.<!Object.<string, string>>}\n   */\n  computeServerCpuOptions = [\n    {name: 'shared', value: 'shared'}, {name: '1', value: '1'},\n    {name: '2', value: '2'}, {name: '4', value: '4'}, {name: '8', value: '8'},\n    {name: '16', value: '16'}, {name: '32', value: '32'}\n  ];\n\n  /**\n   * @export {!Object.<string,!Array.<!Object.<string, number>>>}\n   */\n  gceMachineFamilyConfig = {\n    'gp': {\n      'n1': {\n        'isCustomAvailable': true,\n        'isPreemptibleAvailable': true,\n        'isGpuAvailable': true,\n        'isLocalSsdAvailable': true,\n        'minCustomCore': 1,\n        'maxCustomCore': 96,\n        'minCustomRamRatio': 0.9,\n        'maxCustomRamRatio': 6.5,\n        'isExtendedMemoryAvailable': true,\n        'maxExtendedMemory': this.MAX_EXTENDED_MEMORY_N,\n        'supportedTypes': {\n          'standard': {\n            'ramRatio': 3.75,\n            'coreRatio': 1,\n            'supportedCores': [1, 2, 4, 8, 16, 32, 64, 96]\n          },\n          'highmem': {\n            'ramRatio': 6.5,\n            'coreRatio': 1,\n            'supportedCores': [2, 4, 8, 16, 32, 64, 96]\n          },\n          'highcpu': {\n            'ramRatio': 0.9,\n            'coreRatio': 1,\n            'supportedCores': [2, 4, 8, 16, 32, 64, 96]\n          }\n        }\n      },\n      'n2': {\n        'isCustomAvailable': true,\n        'isPreemptibleAvailable': true,\n        'isGpuAvailable': false,\n        'isLocalSsdAvailable': true,\n        'minCustomCore': 2,\n        'maxCustomCore': 128,\n        'minCustomRamRatio': 1,\n        'maxCustomRamRatio': 8,\n        'isExtendedMemoryAvailable': true,\n        'maxExtendedMemory': this.MAX_EXTENDED_MEMORY_N,\n        'supportedTypes': {\n          'standard': {\n            'ramRatio': 4,\n            'coreRatio': 1,\n            'supportedCores': [2, 4, 8, 16, 32, 48, 64, 80, 96, 128]\n          },\n          'highmem': {\n            'ramRatio': 8,\n            'coreRatio': 1,\n            'alternateRamRatio': 6.75,\n            'supportedCores': [2, 4, 8, 16, 32, 48, 64, 80, 96, 128],\n            'alternateRamRatioCores': [128]\n          },\n          'highcpu': {\n            'ramRatio': 1,\n            'coreRatio': 1,\n            'supportedCores': [2, 4, 8, 16, 32, 48, 64, 80, 96]\n          }\n        },\n        'localSsd': [\n          {vCpu: {min: 2, max: 10}, ssd: [1, 2, 4, 8, 16, 24]},\n          {vCpu: {min: 12, max: 20}, ssd: [2, 4, 8, 16, 24]},\n          {vCpu: {min: 22, max: 40}, ssd: [4, 8, 16, 24]},\n          {vCpu: {min: 42, max: 80}, ssd: [8, 16, 24]},\n          {vCpu: {min: 96, max: 128}, ssd: [16, 24]}\n        ]\n      },\n      'e2': {\n        'isCustomAvailable': true,\n        'isPreemptibleAvailable': true,\n        'isGpuAvailable': false,\n        'isLocalSsdAvailable': false,\n        'minCustomCore': 2,\n        'maxCustomCore': 32,\n        'minCustomRamRatio': 0.5,\n        'maxCustomRamRatio': 8,\n        'hardMaxCustomRamRation': 128,\n        'isExtendedMemoryAvailable': false,\n        'maxExtendedMemory': 0,\n        'supportedTypes': {\n          'standard': {\n            'ramRatio': 4,\n            'coreRatio': 1,\n            'supportedCores': [2, 4, 8, 16, 32]\n          },\n          'highmem':\n              {'ramRatio': 8, 'coreRatio': 1, 'supportedCores': [2, 4, 8, 16]},\n          'highcpu': {\n            'ramRatio': 1,\n            'coreRatio': 1,\n            'supportedCores': [2, 4, 8, 16, 32]\n          },\n        },\n      },\n      'n2d': {\n        'isCustomAvailable': true,\n        'isPreemptibleAvailable': true,\n        'isGpuAvailable': false,\n        'isLocalSsdAvailable': true,\n        'minCustomCore': 2,\n        'maxCustomCore': 96,\n        'minCustomRamRatio': 0.5,\n        'maxCustomRamRatio': 8,\n        'isExtendedMemoryAvailable': true,\n        'maxExtendedMemory': 786,\n        'supportedTypes': {\n          'standard': {\n            'ramRatio': 4,\n            'coreRatio': 1,\n            'supportedCores': [2, 4, 8, 16, 32, 48, 64, 80, 96, 128, 224],\n          },\n          'highmem': {\n            'ramRatio': 8,\n            'coreRatio': 1,\n            'supportedCores': [2, 4, 8, 16, 32, 48, 64, 80, 96],\n          },\n          'highcpu': {\n            'ramRatio': 1,\n            'coreRatio': 1,\n            'supportedCores': [2, 4, 8, 16, 32, 48, 64, 80, 96, 128, 224],\n          },\n        },\n        'localSsd': [\n          {vCpu: {min: 2, max: 16}, ssd: [1, 2, 4, 8, 16, 24]},\n          {vCpu: {min: 32, max: 48}, ssd: [2, 4, 8, 16, 24]},\n          {vCpu: {min: 64, max: 80}, ssd: [4, 8, 16, 24]},\n          {vCpu: {min: 96, max: 224}, ssd: [8, 16, 24]}\n        ]\n      },\n      't2d': {\n        'isCustomAvailable': false,\n        'isPreemptibleAvailable': true,\n        'isGpuAvailable': false,\n        'isLocalSsdAvailable': false,\n        'minCustomCore': 0,\n        'maxCustomCore': 0,\n        'minCustomRamRatio': 0,\n        'maxCustomRamRatio': 0,\n        'isExtendedMemoryAvailable': false,\n        'maxExtendedMemory': 0,\n        'supportedTypes': {\n          'standard': {\n            'ramRatio': 4,\n            'coreRatio': 1,\n            'supportedCores': [1, 2, 4, 8, 16, 32, 48, 60],\n          },\n        },\n      },\n    },\n    'compute': {\n      'c2': {\n        'isCustomAvailable': false,\n        'isPreemptibleAvailable': true,\n        'isGpuAvailable': false,\n        'isLocalSsdAvailable': true,\n        'minCustomCore': 0,\n        'maxCustomCore': 0,\n        'minCustomRamRatio': 0,\n        'maxCustomRamRatio': 0,\n        'isExtendedMemoryAvailable': false,\n        'maxExtendedMemory': 0,\n        'supportedTypes': {\n          'standard': {\n            'ramRatio': 4,\n            'coreRatio': 1,\n            'supportedCores': [4, 8, 16, 30, 60]\n          }\n        },\n        'localSsd': [\n          {vCpu: {min: 4, max: 8}, ssd: [1, 2, 4, 8]},\n          {vCpu: {min: 16, max: 16}, ssd: [2, 4, 8]},\n          {vCpu: {min: 30, max: 30}, ssd: [4, 8]},\n          {vCpu: {min: 60, max: 60}, ssd: [8]}\n        ]\n      }\n    },\n    'memory': {\n      'm1': {\n        'isCustomAvailable': false,\n        'isPreemptibleAvailable': true,\n        'minCustomCore': 4,\n        'maxCustomCore': 60,\n        'isGpuAvailable': false,\n        'isLocalSsdAvailable': false,\n        'minCustomRamRatio': 2,\n        'maxCustomRamRatio': 4,\n        'supportedTypes': {\n          'megamem':\n              {'ramRatio': 1433.6 / 96, 'coreRatio': 1, 'supportedCores': [96]},\n          'ultramem': {\n            'ramRatio': 961 / 40,\n            'coreRatio': 1,\n            'supportedCores': [40, 80, 160]\n          }\n        }\n      },\n      'm2': {\n        'isCustomAvailable': false,\n        'isPreemptibleAvailable': false,\n        'isGpuAvailable': false,\n        'isLocalSsdAvailable': false,\n        'minCustomCore': 4,\n        'maxCustomCore': 60,\n        'minCustomRamRatio': 2,\n        'maxCustomRamRatio': 4,\n        'supportedTypes': {\n          'megamem':\n              {'ramRatio': 5888 / 416, 'coreRatio': 1, 'supportedCores': [416]},\n          'ultramem': {\n            'ramRatio': 5888 / 208,\n            'coreRatio': 1,\n            'supportedCores': [208, 416]\n          },\n        }\n      },\n    },\n    'accelerator': {\n      'a2': {\n        'isCustomAvailable': false,\n        'isPreemptibleAvailable': true,\n        'isGpuAvailable': false,\n        'isLocalSsdAvailable': true,\n        'minCustomCore': 0,\n        'maxCustomCore': 0,\n        'minCustomRamRatio': 0,\n        'maxCustomRamRatio': 0,\n        'isExtendedMemoryAvailable': false,\n        'maxExtendedMemory': 0,\n        'supportedTypes': {\n          'highgpu': {\n            'ramRatio': 85,\n            'coreRatio': 12,\n            'gpuRatio': 1,\n            'supportedCores': [1, 2, 4, 8]\n          },\n          'megagpu': {\n            'ramRatio': 85,\n            'coreRatio': 6,\n            'gpuRatio': 1,\n            'supportedCores': [16]\n          },\n        },\n        'localSsd': [\n          {vCpu: {min: 12, max: 12}, ssd: [1, 2, 4, 8]},\n          {vCpu: {min: 24, max: 24}, ssd: [2, 4, 8]},\n          {vCpu: {min: 48, max: 48}, ssd: [4, 8]},\n          {vCpu: {min: 96, max: 96}, ssd: [8]}\n        ]\n      }\n    },\n  };\n} \n\nexport default MachineConfig","import '@fontsource/roboto';\nimport React from 'react';\n//import Calculator from 'lib/Calculator.js' \n\nimport JSONPretty from 'react-json-pretty';\nimport MachineList from '../lib/MachineList';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { styled } from '@material-ui/core/styles';\nimport MachineConfig from '../lib/MachineConfig';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'left',\n  color: theme.palette.text.secondary,\n}));\n\nclass PriceList extends React.Component {\n\n    constructor(props, context) {\n        super(props,context);\n        // deprecated!\n        //var m = new MachineList()\n        //this.machineList = m.machines()\n\n        var mc = new MachineConfig()\n        this.machineList = mc.machines()\n    }  \n    render () {\n        return (   \n        <React.Fragment>\n            <Item>\n                <pre style={{'text':'align-left'}}>\n                    <JSONPretty id=\"json-pretty\" data={this.machineList}></JSONPretty>\n                </pre>\n            </Item>\n        </React.Fragment>\n        )\n    }\n}\n\nexport default PriceList;\n","/*\n# Copyright 2020 Google Inc.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#            http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n*/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { styled } from '@material-ui/core/styles';\nimport Divider from '@material-ui/core/Divider';\nimport InstanceList from './InstanceList.js' \nimport CostModeling from './CostModeling.js';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport PriceList from './PriceList.js'\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'left',\n  color: theme.palette.text.secondary,\n}));\n\n\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box sx={{ p: 3 }}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.number.isRequired,\n  value: PropTypes.number.isRequired,\n};\n\nfunction setTab(index) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nexport default function MainLayout(props) {\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (          \n      <Box sx={{ width: '100%' }}>\n        <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n          <Tabs value={value} onChange={handleChange} aria-label=\"basic tabs example\">\n            <Tab label=\"Migration Calculator\" {...setTab(0)} />\n            <Tab label=\"[DEBUG] API Pricelist\" {...setTab(1)} />\n            \n            <Tab label=\"[DEBUG] Calculator Pricelist\" {...setTab(2)} />\n            \n          </Tabs>\n        </Box>\n        <TabPanel value={value} index={0}>\n          <CostModeling {...props}\n          />\n        </TabPanel>\n        <TabPanel value={value} index={1}>\n        Pricing Api (https://cloud.google.com/billing/v1/how-tos/catalog-api )\n            <InstanceList\n              {...props}     \n              setAlert={props.setAlert}\n              setError={props.setError}\n              instancePriceList={props.instancePriceList}\n              \n              \n            />\n        </TabPanel>\n         <TabPanel value={value} index={2}>\n        PriceList Calculator (https://cloudpricingcalculator.appspot.com/static/data/pricelist.json) \n            <PriceList\n              {...props}     \n              setAlert={props.setAlert}\n              setError={props.setError}\n            />\n        </TabPanel>\n      </Box>\n  );\n}","import './App.css';\nimport PricingApi from './api/PricingApi.js'\nimport ModalPopup from './components/ModalPopup.js'\nimport AppHeader from './components/AppHeader.js'\nimport MainLayout from './components/MainLayout.js'\nimport MachineList from './lib/MachineList.js'\nimport Divider from '@material-ui/core/Divider';\nimport '@fontsource/roboto';\nimport React from 'react';\nimport MachineConfig from './lib/MachineConfig';\n\nclass App extends React.Component {\n\n  state= {\n    instancePriceList: null,\n    machineList: [],\n    machineListFiltered: [],\n    vcpu_filter: 0,\n    memory_filter: 0,\n    pdboot_filter: 0,\n    ssdpd_filter: 0,\n    regionFilter: '',\n    \n    error : {\n      title:null,\n      content:null,\n      isOpen:false\n    },\n    alert : {\n      title:null,\n      content:null,\n      isOpen:false\n    },\n  }\n\n  constructor(props, context) {\n    super(props,context);\n    this.setError = this.setError.bind(this)\n    this.setAlert = this.setAlert.bind(this)\n    this.handleErrorClose = this.handleErrorClose.bind(this)\n    this.handleInputChanged = this.handleInputChanged.bind(this)\n    this.applyRegionFilter = this.applyRegionFilter.bind(this)\n  }  \n  \n  setError(text,title=\"Error\")\n  {\n    var error = this.state.error;\n    error.title = title;\n    error.content = text;\n    error.isOpen = true      ;\n    this.setState({...this.state,error});\n  }\n\n  setAlert(text,title=\"Alert\")\n  {\n    var alert = this.state.alert;\n    alert.title = title;\n    alert.content = text;\n    alert.isOpen = true      ;\n    this.setState({...this.state,alert});\n  }\n\n  // also closes alert box\n  handleErrorClose() {\n    let error = this.state.error\n    error.isOpen = false\n\n    let alert = this.state.alert\n    alert.isOpen = false\n\n    this.setState({...this.state,alert,error})\n  }\n\n\n  async handleInputChanged(geometry) {\n    if (geometry){\n      // grab the filter \n      var currentFilter = this.state.filter\n\n      // see what gemotery we are looking at in this callback, is it cpu memoy or what\n      var type = geometry.title.toLowerCase()\n\n      // set the current filter value for this type(cpu memroy pd etc)\n      switch (type) {\n        case 'vcpu':\n          await this.setState({vcpu_filter: geometry.recommended})\n          break;        \n        case 'memory':\n          await this.setState({memory_filter: geometry.recommended})\n          break;\n        case 'pd-boot':\n          await this.setState({pdboot_filter: geometry.recommended})\n          break;\n        case 'ssd-pd':\n          await this.setState({ssdpd_filter: geometry.recommended})\n          break;\n      }\n      \n      // apply filter according to state.\n      return this.applyMachineListFilter()\n    }\n  }\n  async applyMachineListFilter() {\n    var machineList = []\n    var vcpu_f = this.state.vcpu_filter\n    var memory_f = this.state.memory_filter    \n    var oml = this.state.machineList\n    for (var i in this.state.machineList) {\n      let curMachine = this.state.machineList[i]\n      //let series =  // not actually series, but different types without hte \n      \n      /// calculate custom types\n      //TODO: need min/max cpu/mem values here\n      if (curMachine.type.includes('custom')) {\n        curMachine.vcpu=vcpu_f\n        curMachine.memory=memory_f\n      }\n\n      var push=false\n      // floor\n      if (vcpu_f <= curMachine.vcpu && memory_f <= curMachine.memory ) {\n        push = true\n      }\n      // celing\n      // dont add cpus more than 2x what we want\n      if (2*vcpu_f < curMachine.vcpu || 2*memory_f < curMachine.memory) {\n        push=false\n      }\n      if (push ) {\n         curMachine.skus = this.getSkus(curMachine.type)\n         machineList.push(curMachine)\n      }\n      \n\n      // don't recomend the next higest size type if we already recommended the smaller one.\n    }    \n    return this.setState({machineListFiltered: machineList})\n  }\n\n  async applyRegionFilter(filter_region) {\n\n    if (!filter_region) {\n      filter_region = this.state.regionFilter\n    }\n      let instancePriceList = []\n      // apply filter\n      if (this.state.instancePriceList) {\n          for(let i =0;i<this.state.instancePriceList.length;i++) {\n              var product = this.state.instancePriceList[i]\n              if (filter_region) {\n                  if (! product[\"serviceRegions\"].includes(filter_region)) {\n                      continue\n                  }\n              }\n              instancePriceList.push(product)\n          }\n      }\n\n      await this.setState({...this.state, regionFilter:filter_region, instancePriceListFiltered: instancePriceList})\n      this.applyMachineListFilter()\n  }\n\n  // TODO: move machine pricing  into another libarary  \n  /// machineTypeName: n2-highcpu-2\n  getSkus(machineTypeName) {\n\n    var series = machineTypeName.split('-').at(0).toLowerCase()\n    var custom=false\n    if (machineTypeName.toLowerCase().includes(\"custom\")) {\n      custom=true\n    }\n\n    var matchStandardRam = new RegExp(`^${series} Instance Ram`,'i')\n    var matchStandardCpu = new RegExp(`^${series} Instance Core`,'i')\n\n    var matchCustomRam = new RegExp(`^${series} Custom Instance Ram`,'i')\n    var matchCustomCpu = new RegExp(`^${series} Custom Instance Core`,'i')\n    if (series == 'e2') {\n      matchCustomRam = matchStandardRam\n      matchCustomCpu = matchStandardCpu\n    }\n\n    if (series == 'n1') {\n      matchCustomRam = matchStandardRam = new RegExp(`^${series}.+ ram`,'ig')\n      matchCustomCpu = matchStandardCpu = new RegExp(`^${series}.+ core`,'ig')\n    }\n\n     if (series.includes('2d')) {\n      matchStandardRam = new RegExp(`^${series} AMD Instance Ram running`,'i')\n      matchStandardCpu = new RegExp(`^${series} AMD Instance Core running`,'i')\n      matchCustomRam = new RegExp(`^${series} AMD Custom Instance Ram running`,'i')\n      matchCustomCpu = new RegExp(`^${series} AMD Custom Instance Core running`,'i')\n     }\n\n    let skus = []\n    for(var i in this.state.instancePriceListFiltered) {\n        var sku = this.state.instancePriceListFiltered[i]\n        var desc = sku['description'].toLowerCase()\n\n\n       if (series)\n        var push =false\n        if (custom) {\n          if (desc.match(matchCustomCpu)) {\n            push=true\n            sku['calculatedType'] = 'CPU'\n          }\n          if (desc.match(matchCustomRam)) {\n            push=true\n            sku['calculatedType'] = 'RAM'\n          }\n\n        } else {\n        if (desc.match(matchStandardCpu)) {\n            push=true\n            sku['calculatedType'] = 'CPU'\n          }\n          if (desc.match(matchStandardRam)) {\n            push=true\n            sku['calculatedType'] = 'RAM'\n          }        \n        }\n        \n        if(push){\n          skus.push(sku)\n        }\n    }\n    return skus\n  }\n\n  // TODO: move pricing stuff into another libarary\n  \n  async loadMachines() {\n    var m = new MachineConfig()\n    var machines = m.machines()\n    await this.setState({...this.state, machineList: machines})\n    await this.applyMachineListFilter()\n    await this.applyRegionFilter()\n  }\n\n  async componentDidMount() {\n    // load machine types    \n    await this.getPricing()\n    await this.loadMachines()\n    \n  }\n\n  async getPricing() { \n    try \n    {\n      let pricingApi = new PricingApi();\n      let instancePriceListJson = await pricingApi.GetInstancePriceList()\n      this.setState({...this.state, instancePriceList: instancePriceListJson})\n     } catch( ex) {\n       this.setError(`Could not Load pricing from Google. ${ex.message }`)\n      //  /throw new Error(ex)\n     }   \n  }\n\n  \n  //TODO: move this crap into its own layout with the tabs\n  setTab(index) {\n    return {\n      id: `simple-tab-${index}`,\n      'aria-controls': `simple-tabpanel-${index}`,\n    };\n  }\n\n  \n  render() {\n    return (\n      <div className=\"App\">\n      <ModalPopup           \n        title={this.state.error.title} \n        content={this.state.error.content} \n        open={this.state.error.isOpen} \n        onClose={this.handleErrorClose} />\n      <ModalPopup           \n          title={this.state.alert.title} \n          content={this.state.alert.content} \n          open={this.state.alert.isOpen} \n          severity=\"info\"\n          onClose={this.handleErrorClose} />     \n      <AppHeader \n        setError = {this.setError}\n        setAlert = {this.setAlert}\n      />\n  <Divider />\n  <MainLayout      \n    setAlert={this.setAlert}\n    setError={this.setError}\n    instancePriceList = {this.state.instancePriceList}   \n    instancePriceListFiltered = {this.state.instancePriceListFiltered}\n    machineList = {this.state.machineListFiltered}  \n    onInputChanged = {this.handleInputChanged}\n    applyRegionFilter = {this.applyRegionFilter}\n    />\n        \n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}